/*I think I will remove this class later and rearrange the hierarchy. Really consfused about the arrangement*/function PowerConsumer(id, name, launchMass, costPrice, sellingPrice, timeToManufacture, materialsToManufacture, powerToOperate, isActive){	Device.call(this,id, name, launchMass, costPrice, sellingPrice, timeToManufacture, materialsToManufacture);//call parent constructor with necessary arguments	this.powerToOperate=powerToOperate;//Power it requires to operate	this.isActive=isActive;//If it is active, then it can operate (like: extract minerals, manufacture devices, other functionalities???)}//inherit from DevicePowerConsumer.prototype = Object.create(Device.prototype);PowerConsumer.prototype.constructor=PowerConsumer;PowerConsumer.prototype.activate=function(){	this.isActive=true;}