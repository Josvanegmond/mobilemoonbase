/*A PowerSource is a device which can provide power*/function PowerSource(id, name, launchMass, costPrice, sellingPrice, timeToManufacture, materialsToManufacture, totalPower, isUsed){	Device.call(this,id, name, launchMass, costPrice, sellingPrice, timeToManufacture, materialsToManufacture);//call parent constructor with necessary arguments	this.totalPower=totalPower;	//this.availablePower=totalPower;	this.isUsed=isUsed;}//inherit from ResourcePowerSource.prototype = Object.create(Device.prototype);PowerSource.prototype.constructor=PowerSource;/*Powergrid can take power from a power source*//*PowerSource.prototype.decreasePower=function(powerToDecrease){	if(this.availablePower>=powerToDecrease){		this.availablePower-=powerToDecrease;		return true;	}	return false;}*//*Powergrid can return power to the source*//*PowerSource.prototype.returnPower=function(returnedPower){	this.availablePower+=returnedPower;	if(this.availablePower>this.totalPower)	{this.availablePower=this.totalPower;	}}*/